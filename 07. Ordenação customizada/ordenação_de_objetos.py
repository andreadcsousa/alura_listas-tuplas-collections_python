# -*- coding: utf-8 -*-
"""Ordenação de objetos

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1b0HATzgn4AVDKJsiJ01mHj-4JIiWJwx9
"""

# acessa o atributo sem criar uma função para isso
from operator import attrgetter
idades = [15, 87, 32, 65, 56, 32, 49, 37]
idades

sorted(idades)

sorted(idades, reverse=True)

list(reversed(idades))

idades.sort()
idades

idades.sort(reverse=True)
idades

15 < 32

nomes = ["Neuza", "andrea", "Eloisa"]
sorted(nomes)

nomes.sort()
nomes


class ContaSalario:

    def __init__(self, codigo):
        self._codigo = codigo
        self._saldo = 0

    def __eq__(self, outro):
        if type(outro) != ContaSalario:
            return False
        return self._codigo == outro._codigo and self._saldo == outro._saldo

    def deposita(self, valor):
        self._saldo += valor

    def __str__(self):
        return "[>> Código {} Saldo {} <<]".format(self._codigo, self._saldo)


conta_andrea = ContaSalario(16)
conta_andrea.deposita(500)

conta_eloisa = ContaSalario(17)
conta_eloisa.deposita(1000)

conta_neuza = ContaSalario(18)
conta_neuza.deposita(510)

contas = [conta_andrea, conta_eloisa, conta_neuza]

for conta in contas:
    print(conta)

sorted(contas)


def extrai_saldo(conta):
    return conta._saldo     # evitar acesso a dados privados


for conta in sorted(contas, key=extrai_saldo):
    print(conta)


for conta in sorted(contas, key=attrgetter("_saldo")):
    print(conta)


class ContaSalario:

    def __init__(self, codigo):
        self._codigo = codigo
        self._saldo = 0

    def __eq__(self, outro):
        if type(outro) != ContaSalario:
            return False
        return self._codigo == outro._codigo and self._saldo == outro._saldo

    def __lt__(self, outro):
        return self._saldo < outro._saldo

    def deposita(self, valor):
        self._saldo += valor

    def __str__(self):
        return "[>> Código {} Saldo {} <<]".format(self._codigo, self._saldo)


conta_andrea = ContaSalario(16)
conta_andrea.deposita(500)

conta_eloisa = ContaSalario(17)
conta_eloisa.deposita(1000)

conta_neuza = ContaSalario(18)
conta_neuza.deposita(510)

contas = [conta_andrea, conta_eloisa, conta_neuza]

conta_andrea < conta_eloisa

for conta in sorted(contas):
    print(conta)
